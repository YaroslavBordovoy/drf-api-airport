services:
  airport:
    build:
      context: .
    env_file:
      - .env
    ports:
      - "8000:8000"
    volumes:
      - ./:/app
      - my_media:/files/media
    command: >
      sh -c "python manage.py migrate && 
            python manage.py runserver 0.0.0.0:8000"
    depends_on:
      - db

  db:
    image: postgres:16-alpine
    restart: always
    env_file:
      - .env
    ports:
      - "5432:5432"
    volumes:
      - my_db:$PGDATA

volumes:
  my_db:
  my_media:

#         condition: service_healthy
#   db:
#     image: postgres
#     restart: always
#     user: postgres
#     secrets:
#       - db-password
#     volumes:
#       - db-data:/var/lib/postgresql/data
#     environment:
#       - POSTGRES_DB=example
#       - POSTGRES_PASSWORD_FILE=/run/secrets/db-password
#     expose:
#       - 5432
#     healthcheck:
#       test: [ "CMD", "pg_isready" ]
#       interval: 10s
#       timeout: 5s
#       retries: 5
# volumes:
#   db-data:
# secrets:
#   db-password:
#     file: db/password.txt

